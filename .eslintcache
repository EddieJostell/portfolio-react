[{"E:\\Workspace\\portfolio-react\\src\\index.tsx":"1","E:\\Workspace\\portfolio-react\\src\\reportWebVitals.ts":"2","E:\\Workspace\\portfolio-react\\src\\App.tsx":"3","E:\\Workspace\\portfolio-react\\src\\utils\\HelperContext.tsx":"4","E:\\Workspace\\portfolio-react\\src\\utils\\data.tsx":"5","E:\\Workspace\\portfolio-react\\src\\components\\Navigation.tsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1753,"mtime":1610214366140,"results":"10","hashOfConfig":"8"},{"size":899,"mtime":1599662446374,"results":"11","hashOfConfig":"8"},{"size":6164,"mtime":1599837624944,"results":"12","hashOfConfig":"8"},{"size":2651,"mtime":1610216012733,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1de7zuy",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Workspace\\portfolio-react\\src\\index.tsx",[],["28","29"],"E:\\Workspace\\portfolio-react\\src\\reportWebVitals.ts",[],"E:\\Workspace\\portfolio-react\\src\\App.tsx",["30","31","32","33","34"],"E:\\Workspace\\portfolio-react\\src\\utils\\HelperContext.tsx",["35","36","37"],"import React, { ReactNode, createContext } from \"react\";\r\nimport { QuoteInfo, IQuoteItem } from \"./data\";\r\n\r\n//Trying to sort a proper Context...\r\n\r\n/* export interface IContextProps {\r\n  state: IContextState;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport interface IContextState {\r\n  quoteItem?: IQuoteItem | never[];\r\n}\r\n\r\nconst HelperCtx: IContextState = { quoteItem: [] };\r\n\r\nconst HelperContext = React.createContext(HelperCtx);\r\n\r\nconst HelperProvider = (props: IContextProps) => {\r\n  const { state, children } = props;\r\n\r\n  return (\r\n    <HelperContext.Provider value={state}>{children}</HelperContext.Provider>\r\n  );\r\n};\r\n\r\nexport { HelperContext, HelperProvider }; */\r\n\r\nexport interface IContextState {\r\n  quoteItem?: IQuoteItem | never[];\r\n}\r\n\r\nexport const QuoteContext = createContext([] as IQuoteItem[]);\r\n\r\nexport const QuoteProvider = QuoteContext.Provider;\r\n\r\nexport default QuoteContext;\r\n","E:\\Workspace\\portfolio-react\\src\\utils\\data.tsx",[],"E:\\Workspace\\portfolio-react\\src\\components\\Navigation.tsx",["38","39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":7,"column":35,"nodeType":"47","messageId":"48","endLine":7,"endColumn":41},{"ruleId":"45","severity":1,"message":"50","line":7,"column":43,"nodeType":"47","messageId":"48","endLine":7,"endColumn":48},{"ruleId":"45","severity":1,"message":"51","line":7,"column":50,"nodeType":"47","messageId":"48","endLine":7,"endColumn":54},{"ruleId":"52","severity":1,"message":"53","line":49,"column":1,"nodeType":"54","messageId":"55","endLine":64,"endColumn":2},{"ruleId":"45","severity":1,"message":"56","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":13},{"ruleId":"45","severity":1,"message":"57","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},{"ruleId":"45","severity":1,"message":"58","line":2,"column":10,"nodeType":"47","messageId":"48","endLine":2,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":24,"column":11,"nodeType":"61","endLine":24,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":29,"column":15,"nodeType":"61","endLine":29,"endColumn":80},{"ruleId":"62","severity":1,"message":"63","line":33,"column":15,"nodeType":"61","endLine":36,"endColumn":17},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'React' is defined but never used.","'ReactNode' is defined but never used.","'QuoteInfo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]