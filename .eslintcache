[{"E:\\Workspace\\portfolio-react\\src\\index.tsx":"1","E:\\Workspace\\portfolio-react\\src\\reportWebVitals.ts":"2","E:\\Workspace\\portfolio-react\\src\\App.tsx":"3","E:\\Workspace\\portfolio-react\\src\\utils\\HelperContext.tsx":"4","E:\\Workspace\\portfolio-react\\src\\utils\\data.tsx":"5","E:\\Workspace\\portfolio-react\\src\\components\\Container\\Container.tsx":"6","E:\\Workspace\\portfolio-react\\src\\components\\Navigation\\Navigation.tsx":"7","E:\\Workspace\\portfolio-react\\src\\components\\Contact\\Contact.tsx":"8","E:\\Workspace\\portfolio-react\\src\\components\\About\\About.tsx":"9","E:\\Workspace\\portfolio-react\\src\\components\\Portfolio\\Portfolio.tsx":"10","E:\\Workspace\\portfolio-react\\src\\components\\Contact\\ContactContent\\ContactContent.tsx":"11","E:\\Workspace\\portfolio-react\\src\\components\\About\\QuoteContent\\QuoteContent.tsx":"12","E:\\Workspace\\portfolio-react\\src\\components\\Portfolio\\PortfolioContent\\PortfolioContent.tsx":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":3265,"mtime":1610158941371,"results":"17","hashOfConfig":"15"},{"size":899,"mtime":1599662446374,"results":"18","hashOfConfig":"15"},{"size":6164,"mtime":1599837624944,"results":"19","hashOfConfig":"15"},{"size":217,"mtime":1610159424899,"results":"20","hashOfConfig":"15"},{"size":3968,"mtime":1610160885069,"results":"21","hashOfConfig":"15"},{"size":467,"mtime":1610159307365,"results":"22","hashOfConfig":"15"},{"size":2142,"mtime":1610159273699,"results":"23","hashOfConfig":"15"},{"size":1046,"mtime":1610159189749,"results":"24","hashOfConfig":"15"},{"size":1388,"mtime":1610159503576,"results":"25","hashOfConfig":"15"},{"size":397,"mtime":1610159315140,"results":"26","hashOfConfig":"15"},{"size":2857,"mtime":1610158293627,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1de7zuy",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Workspace\\portfolio-react\\src\\index.tsx",[],["59","60"],"E:\\Workspace\\portfolio-react\\src\\reportWebVitals.ts",[],"E:\\Workspace\\portfolio-react\\src\\App.tsx",["61","62","63"],"/* import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n */\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Navigation from './components/Navigation/Navigation';\nimport Container from './components/Container/Container';\nimport About from './components/About/About';\nimport Home from './components/Home/Home';\nimport './App.scss';\nimport Portfolio from './components/Portfolio/Portfolio';\n//import Route from \"./utils/Route\";\nimport Contact from './components/Contact/Contact';\nimport { QuoteProvider } from './utils/HelperContext';\nimport { ProjectList, IQuoteItem, QuoteInfo } from './utils/data';\n\nexport interface IPropertyState {\n  quoteItem: IQuoteItem[];\n}\n\nfunction App() {\n  const [appState, setAppState] = useState({\n    navIsOpen: false,\n    quoteList: QuoteInfo,\n    projectList: ProjectList,\n  });\n\n  const toggleNav = (visible: boolean) => {\n    setAppState({ ...appState, navIsOpen: visible });\n  };\n\n  return (\n    <QuoteProvider value={appState.quoteList}>\n      <Router>\n        <div className=\"App\">\n          <Navigation\n            navIsOpen={appState.navIsOpen}\n            toggleNav={toggleNav}\n            name=\"Edward 'Eddie' Jostell\"\n          />\n          <Container>\n            <Route exact path=\"/\" component={About} />\n            {/* <Route path=\"/About\" render={() => <About />} /> */}\n            <Route\n              path=\"/Portfolio\"\n              render={() => <Portfolio data={appState.projectList} />}\n            />\n            <Route path=\"/Contact\" render={() => <Contact />} />\n          </Container>\n        </div>\n      </Router>\n    </QuoteProvider>\n  );\n\n  // HelperProvider for the proper useContext...\n  /*   return (\n    <HelperProvider state={appState.quoteList}>\n      <Router>\n        <div className=\"App\">\n          <Navigation\n            navIsOpen={appState.navIsOpen}\n            toggleNav={toggleNav}\n            name=\"Edward 'Eddie' Jostell\"\n          />\n          <Container>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/About\" render={() => <About />} />\n            <Route\n              path=\"/Portfolio\"\n              render={() => <Portfolio data={appState.projectList} />}\n            />\n            <Route path=\"/Contact\" render={() => <Contact />} />\n          </Container>\n        </div>\n      </Router>\n    </HelperProvider>\n  ); */\n}\n\nexport default App;\n\n//https://coolors.co/000000-000a1c-13211a-44001d-ffffff\n//https://coolors.co/44355b-31263e-221e22-ff4b3e-eca72c\n\n//https://coolors.co/f26326-000000-ffffff-4a5664-fc0000\n//https://coolors.co/a30002-000000-eaeaea-466365-274060\n\n//Använd för att lista ut components\n/*    array.map(() => {\n        <Route />\n      }) */\n","E:\\Workspace\\portfolio-react\\src\\utils\\HelperContext.tsx",["64","65","66"],"import React, { ReactNode, createContext } from \"react\";\r\nimport { QuoteInfo, IQuoteItem } from \"./data\";\r\n\r\n//Trying to sort a proper Context...\r\n\r\n/* export interface IContextProps {\r\n  state: IContextState;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport interface IContextState {\r\n  quoteItem?: IQuoteItem | never[];\r\n}\r\n\r\nconst HelperCtx: IContextState = { quoteItem: [] };\r\n\r\nconst HelperContext = React.createContext(HelperCtx);\r\n\r\nconst HelperProvider = (props: IContextProps) => {\r\n  const { state, children } = props;\r\n\r\n  return (\r\n    <HelperContext.Provider value={state}>{children}</HelperContext.Provider>\r\n  );\r\n};\r\n\r\nexport { HelperContext, HelperProvider }; */\r\n\r\nexport interface IContextState {\r\n  quoteItem?: IQuoteItem | never[];\r\n}\r\n\r\nexport const QuoteContext = createContext([] as IQuoteItem[]);\r\n\r\nexport const QuoteProvider = QuoteContext.Provider;\r\n\r\nexport default QuoteContext;\r\n","E:\\Workspace\\portfolio-react\\src\\utils\\data.tsx",[],"E:\\Workspace\\portfolio-react\\src\\components\\Container\\Container.tsx",[],"E:\\Workspace\\portfolio-react\\src\\components\\Navigation\\Navigation.tsx",["67","68","69"],"E:\\Workspace\\portfolio-react\\src\\components\\Contact\\Contact.tsx",[],"E:\\Workspace\\portfolio-react\\src\\components\\About\\About.tsx",["70","71"],"import * as React from 'react';\r\nimport './About.scss';\r\nimport { useContext, useState } from 'react';\r\nimport QuoteContext from '../../utils/HelperContext';\r\nimport QuoteContent from './QuoteContent/QuoteContent';\r\nimport { IQuoteItem } from '../../utils/data';\r\n\r\ninterface IAboutProps {}\r\n\r\nconst About = (props: IAboutProps) => {\r\n  const Quote = useContext(QuoteContext);\r\n\r\n  const [quoteList, setQuoteList] = useState(Quote);\r\n\r\n  let quotes = quoteList[Math.floor(Math.random() * quoteList.length)];\r\n\r\n  return (\r\n    <div className=\"About\">\r\n      <div className=\"Top\">\r\n        <span className=\"intro\">\r\n          Hello! My name is Eddie and I am a Frontend-developer.\r\n        </span>\r\n        <QuoteContent quote={quotes.quote} author={quotes.author} />\r\n      </div>\r\n\r\n      <div className=\"Bot\">\r\n        <div className=\"Bot-box\">\r\n          <h2>Likes</h2>\r\n          <div>\r\n            When Im not hitting the keyboard to create magic on the web or\r\n            playing games I like to hang out with my friends, go to the gym,\r\n            long walks, relax with movies/tvshows or just listening to good\r\n            music.\r\n          </div>\r\n        </div>\r\n        <div className=\"Bot-box\">\r\n          <h2>Me</h2>\r\n          <div>Name: Edward 'Eddie' Jostell.</div>\r\n          <div>Age: 32 summers.</div>\r\n          <div>From: Stockholm, Sweden.</div>\r\n          <div>Occupation: Frontend-developer.</div>\r\n        </div>\r\n        <div className=\"Bot-box\">\r\n          <h2>Gamer</h2>\r\n          <div>\r\n            Before I wanted to become a web-developer I played at a\r\n            semi-professional level in the computer game Counter Strike - Global\r\n            Offensive. Even tho I dont play on that level anymore I still dream\r\n            of a comeback.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n\r\n//https://stackoverflow.com/questions/42094060/changing-shuffling-text-every-1-5-second-in-a-react-component\r\n\r\n/*  let robin: JSX.Element[] = quoteList.map((q: IQuoteItem, key: any) => (\r\n    <QuoteContent key={key} quote={q.quote} author={q.author} />\r\n  )); */\r\n","E:\\Workspace\\portfolio-react\\src\\components\\Portfolio\\Portfolio.tsx",["72","73"],"import React from 'react';\r\nimport './Portfolio.scss';\r\nimport { IPortfolioItem } from '../../utils/data';\r\ninterface IPortfolioProps {\r\n  data: IPortfolioItem[];\r\n}\r\n\r\nconst Portfolio = (props: IPortfolioProps) => {\r\n  const { data } = props;\r\n\r\n  const displayPortfolioData = () => {\r\n    /* return data.map((port, key) => (\r\n      <PortfolioContent\r\n        key={key}\r\n        title={port.title}\r\n        tech={port.tech}\r\n        link={port.link}\r\n        img={port.img}\r\n        text={port.text}\r\n      />\r\n    )); */\r\n  };\r\n  /*\r\n  const { portArray } = this.state;\r\n\r\n  const portfolio = portArray.map((port, key) => (\r\n    <PortfolioContent\r\n      key={key}\r\n      title={port.title}\r\n      tech={port.tech}\r\n      link={port.link}\r\n      img={port.img}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"Portfolio\">\r\n      <h1>PROJECTS</h1>\r\n      <ul className=\"List\">{portfolio}</ul>\r\n    </div>\r\n  );\r\n}\r\n}\r\n*/\r\n\r\n  return (\r\n    <div className=\"Portfolio\">\r\n      <h1>PROJECTS</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","E:\\Workspace\\portfolio-react\\src\\components\\Contact\\ContactContent\\ContactContent.tsx",["74","75","76","77","78","79","80","81"],"E:\\Workspace\\portfolio-react\\src\\components\\About\\QuoteContent\\QuoteContent.tsx",[],"E:\\Workspace\\portfolio-react\\src\\components\\Portfolio\\PortfolioContent\\PortfolioContent.tsx",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":30,"column":35,"nodeType":"88","messageId":"89","endLine":30,"endColumn":41},{"ruleId":"86","severity":1,"message":"90","line":30,"column":50,"nodeType":"88","messageId":"89","endLine":30,"endColumn":54},{"ruleId":"86","severity":1,"message":"91","line":34,"column":8,"nodeType":"88","messageId":"89","endLine":34,"endColumn":12},{"ruleId":"86","severity":1,"message":"92","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"93","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"94","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":19},{"ruleId":"95","severity":1,"message":"96","line":22,"column":9,"nodeType":"97","endLine":22,"endColumn":12},{"ruleId":"98","severity":1,"message":"99","line":27,"column":13,"nodeType":"97","endLine":27,"endColumn":65},{"ruleId":"98","severity":1,"message":"99","line":31,"column":13,"nodeType":"97","endLine":31,"endColumn":67},{"ruleId":"86","severity":1,"message":"100","line":6,"column":10,"nodeType":"88","messageId":"89","endLine":6,"endColumn":20},{"ruleId":"86","severity":1,"message":"101","line":13,"column":21,"nodeType":"88","messageId":"89","endLine":13,"endColumn":33},{"ruleId":"86","severity":1,"message":"102","line":9,"column":11,"nodeType":"88","messageId":"89","endLine":9,"endColumn":15},{"ruleId":"86","severity":1,"message":"103","line":11,"column":9,"nodeType":"88","messageId":"89","endLine":11,"endColumn":29},{"ruleId":"98","severity":1,"message":"99","line":11,"column":11,"nodeType":"97","endLine":11,"endColumn":45},{"ruleId":"98","severity":1,"message":"99","line":18,"column":13,"nodeType":"97","endLine":18,"endColumn":41},{"ruleId":"104","severity":1,"message":"105","line":27,"column":11,"nodeType":"97","endLine":27,"endColumn":78},{"ruleId":"98","severity":1,"message":"99","line":28,"column":13,"nodeType":"97","endLine":28,"endColumn":45},{"ruleId":"104","severity":1,"message":"105","line":31,"column":9,"nodeType":"97","endLine":31,"endColumn":76},{"ruleId":"104","severity":1,"message":"105","line":37,"column":11,"nodeType":"97","endLine":37,"endColumn":69},{"ruleId":"98","severity":1,"message":"99","line":38,"column":13,"nodeType":"97","endLine":38,"endColumn":43},{"ruleId":"104","severity":1,"message":"105","line":41,"column":9,"nodeType":"97","endLine":41,"endColumn":67},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Home' is defined but never used.","'React' is defined but never used.","'ReactNode' is defined but never used.","'QuoteInfo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'IQuoteItem' is defined but never used.","'setQuoteList' is assigned a value but never used.","'data' is assigned a value but never used.","'displayPortfolioData' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]